Type = Particles
Def
{
	EmitPerSecond = 0
	EmitPerOneShot = 0
	Initializers
	[
		{
			Type = ScaleToWorldSpace
			ScaleIn = base_scale
			ScaleOut = base_scale
			Name = ""
			Enabled = true
			UpdateAfterInit = false
		}
	]
	Updaters
	[
		{
			Type = Lifetime
			LifeInOut = life
			Lifetime = 0.75
			Name = Lifetime
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = Lerp
			LerpIn = life
			DataOut = scale
			Invert = false
			ValueType = Float
			FromValue = 1.1
			ToValue = 1.2
			Name = "Scale lerp"
			Enabled = true
			UpdateAfterInit = true
		}
		{
			Type = Operator
			DataType = Float
			AIn = scale
			BIn = base_scale
			ResultOut = scale
			Operator = Multiply
			Name = "Apply base scale"
			Enabled = true
			UpdateAfterInit = true
		}
		{
			Type = ColorRamp
			LerpIn = life
			ColorOut = color
			Invert = false
			Colors
			[
				{
					Rf = 1
					Gf = 1
					Bf = 1
					Af = 0
				}
				{
					Rf = 1
					Gf = 1
					Bf = 1
					Af = 0.78431374
				}
				{
					Rf = 1
					Gf = 1
					Bf = 1
					Af = 1
				}
				{
					Rf = 1
					Gf = 1
					Bf = 1
					Af = 1
				}
				{
					Rf = 1
					Gf = 1
					Bf = 1
					Af = 1
				}
				{
					Rf = 1
					Gf = 1
					Bf = 1
					Af = 1
				}
				{
					Rf = 1
					Gf = 1
					Bf = 1
					Af = 0.78431374
				}
				{
					Rf = 1
					Gf = 1
					Bf = 1
					Af = 0
				}
			]
			Name = "Alpha Ramp"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = Operator
			DataType = Color
			AIn = color
			BIn = baseColor
			ResultOut = color
			Operator = Multiply
			Name = "Combine Final Colors"
			Enabled = true
			UpdateAfterInit = false
		}
	]
	Renderer
	{
		Type = StandardQuadRenderer
		LocationIn = location
		ScaleIn = scale
		Scale2In
		RotationIn = rot
		ColorIn = color
		UvRectIn = uv_rect
		BaseSize
		{
			X = 1
			Y = 1
		}
		Offset
		{
			X = 0
			Y = 0
		}
		Name = ""
	}
	Material
	{
		Shader
		{
			File = fire.shader
		}
		_noiseTex
		{
			File = fire_noise.png
			MipLevels = max
			SampleMode = Linear
			UMode = Wrap
			VMode = Wrap
		}
		_rampTex
		{
			File = fire_ramp.png
		}
		Texture = &~/Def/Material/_noiseTex
		TargetBlendMode = Add
	}
	DeleteMode = Fast
	FpsCompensation = None
	FpsCompensationStrength = 1
	EnableMultithreading = false
	InitCapacity = 256
}
EmitterDef
{
	EmitPerSecond = 16
	EmitPerOneShot
	{
		Min = 0
		Max = 0
	}
	PreInitializers
	[
		{
			Type = SetRandomVelocity
			VelocityOut = velocity
			Speed
			{
				Min = 0
				Max = 0.5
			}
			Direction
			{
				Min = 0d
				Max = 360d
			}
			Name = "Initial velocity"
			Enabled = false
			UpdateAfterInit = false
		}
		{
			Type = SetValue
			DataOut = base_scale
			ValueType = Float
			Value = 0.2
			Name = "Base scale"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = LocationFromCustomShape
			LocationOut = location
			Name = "Init location in grid"
			Enabled = false
			UpdateAfterInit = false
		}
		{
			Type = LocationFromCustomShape
			LocationOut = location
			Name = ""
			Enabled = false
			UpdateAfterInit = false
		}
		{
			Type = LocationAndValueFromCustomShape
			LocationOut = location
			ValueOut = fireSize
			Name = ""
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = SetRandom
			DataOut = flip
			ValueType = Vector2
			FromValue
			{
				X = 0
				Y = 0
			}
			ToValue
			{
				X = 1
				Y = 1
			}
			Name = "random flip"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = SetRandom
			DataOut = time_offset
			ValueType = Float
			FromValue = 0
			ToValue = 1
			Name = "random time offset"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = ColorRamp
			LerpIn = fireSize
			ColorOut = baseColor
			Invert = false
			Colors
			[
				{
					Rf = 0
					Gf = 1
					Bf = 1
					Af = 1.9607843
				}
				{
					Rf = 1
					Gf = 1
					Bf = 1
					Af = 1
				}
			]
			Name = "fire size to red color channel"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = SetValue
			DataOut = uv_rect
			ValueType = Vector4
			Value
			{
				X = 0
				Y = 0
				Z = 1
				W = 1
			}
			Name = "create uv rect"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = UvFlip
			FlipXYIn = flip_xy
			UvRectInOut = uv_rect
			Name = "apply random flip to uv rect"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = SetRandom
			DataOut = baseColor2
			ValueType = Color
			FromValue
			{
				Rf = 1
				Gf = 0
				Bf = 0
				Af = 1
			}
			ToValue
			{
				Rf = 1
				Gf = 1
				Bf = 1
				Af = 1
			}
			Name = "random blue and green for tex offset"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = Operator
			DataType = Color
			AIn = baseColor
			BIn = baseColor2
			ResultOut = baseColor
			Operator = Multiply
			Name = "combine base colors"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = OperatorConst
			AIn = fireSize
			ResultOut = clampedFireSize
			Operator = Max
			ValueType = Float
			Value = 0.25
			Name = "create clamped fire size"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = Operator
			DataType = Float
			AIn = base_scale
			BIn = clampedFireSize
			ResultOut = base_scale
			Operator = Add
			Name = "add clamped fire size to base scale"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = SetRandom
			DataOut = scaleOffset
			ValueType = Vector2
			FromValue
			{
				X = -0.5
				Y = -0.5
			}
			ToValue
			{
				X = 0.5
				Y = 0.5
			}
			Name = "create random offset"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = OperatorConst
			AIn = clampedFireSize
			ResultOut = inverseFireSize
			Operator = Subtract
			ValueType = Float
			Value = 1
			Name = "create inverse fire size"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = ScalarOperator
			AIn = inverseFireSize
			DataType = Vector2
			BIn = scaleOffset
			ResultOut = scaleOffset
			Operator = Multiply
			Name = "scale offset by inverse fire size"
			Enabled = true
			UpdateAfterInit = false
		}
		{
			Type = Operator
			DataType = Vector2
			AIn = scaleOffset
			BIn = location
			ResultOut = location
			Operator = Add
			Name = "add offset to location"
			Enabled = true
			UpdateAfterInit = false
		}
	]
	PostInitializers[]
}
Bucket = Fire
UseRealTime = false
PenetratingBucket
MinIntensity = 0
IsFancy = false
IsFancyLight = false
IsSimpleLight = false
IsSimple = false
Sharing = None
UnsharedRenderInWorldSpace = false
DontEmitWhenOffScreen = true
DontEmitWhenOffScreenSizeInflate = 3
UseCustomShapeForOffScreenCheck = true
MaxEmissionZoom = 15
MaxParticleCount = 10000
ScaleEmissionWithIntensity = true
ScaleEmissionWithBeamLength = false
ScaleEmissionWithWorldVelocity = false
ScaleEmissionWithPartSize = false
ScaleEmissionWithPartPhysicalSize = false
CaptureBackBuffer = false
Filter
{
	Ships = true
	OperationalHealth = true
	StructuralHealth = true
	OnlyPartCategories
	ExcludePartCategories
	Shields = true
	Bullets = true
	OnlyBulletCategories
	ExcludeBulletCategories
	Crew = true
	Nuggets = true
	IgnoreInvulnerability = true
	Flammable = true
	NonFlammable = true
	Self
	TargetedSelf
	Friendlies = true
	TargetedFriendlies
	Enemies = true
	TargetedEnemies
	Neutrals = true
	TargetedNeutrals
	Junk = true
	TargetedJunk
	Deconstruction
}
Delay = 0
IgnoreIntensity = false
