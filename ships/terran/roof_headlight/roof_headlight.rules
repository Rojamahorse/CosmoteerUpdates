Part : <../base_part_terran.rules>/Part
{
	NameKey = "Parts/RoofHeadlight"
	IconNameKey = "Parts/RoofHeadlightIcon"
	ID = cosmoteer.roof_headlight // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	EditorGroup = "Utilities"
	DescriptionKey = "Parts/RoofHeadlightDesc"
	Resources
	[
		[steel, 4]
		[coil, 2]
	]
	TypeCategories = [uses_power]
	Flammable = false
	ReceivableBuffs : ^/0/ReceivableBuffs []
	Size = [1, 1]
	MaxHealth = 1000
	AllowedDoorLocations = []
	ForceBrushCompatibility = false
	CrewSpeedFactor = 0
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [32, 32]
	}
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, CommandToggle]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		ColorPicker
		{
			Type = UIColor
			ColorID = "roof_light"
			Default = White
		}

		LightStrength
		{
			Type = UIToggle
			ToggleID = "light_strength"
			Default = 0
		}

		CommandToggle
		{
			Type = CommandToggle
		}

		Graphics
		{
			Type = Graphics
			Location = [.5, .5]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [1, 1]
					}
					{
						File = "floor_33.png"
						Size = [1, 1]
					}
					{
						File = "floor_66.png"
						Size = [1, 1]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [1, 1]
					}
					{
						File = "walls_33.png"
						Size = [1, 1]
					}
					{
						File = "walls_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [1, 1]
					}
					{
						File = "lights_33.png"
						Size = [1, 1]
					}
					{
						File = "lights_66.png"
						Size = [1, 1]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [1, 1]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [1, 1]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [1, 1]
					}
				]
			}
		}

		InternalColoredGraphics
		{
			Type = Graphics
			Location = [.5, 0]
			OperationalToggle = IsOperational
			GetColorFrom = ColorPicker
			OperationalLighting
			{
				Layer = "lights_add"
				Offset = [0, .5]
				DamageLevels
				[
					{
						File = "lights_colored.png"
						Size = [1, 1]
					}
				]
			}
		}

		TurretGraphics
		{
			Type = Graphics
			ChainedTo = Turret
			Rotation = 90d
			OperationalToggle = IsOperational
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "headlight_turret.png"
						NormalsFile = "headlight_turret_normals.png"
						Size = [1, 1]
					}
					{
						File = "headlight_turret_33.png"
						NormalsFile = "headlight_turret_normals_33.png"
						Size = [1, 1]
					}
					{
						File = "headlight_turret_66.png"
						NormalsFile = "headlight_turret_normals_66.png"
						Size = [1, 1]
					}
				]
			}
			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				DamageLevels
				[
					{
						File = "headlight_source_white.png"
						Size = [1, 1]
					}
				]
			}
		}
		TurretGraphicsColored
		{
			Type = Graphics
			ChainedTo = Turret
			Rotation = 90d
			OperationalToggle = IsOperational
			GetColorFrom = ColorPicker
			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				Offset = [0, -0.5]
				DamageLevels
				[
					{
						File = "headlight_source_colored.png"
						Size = [2, 2]
					}
				]
			}
		}

		LightLowToggle
		{
			Type = ModeToggle
			Mode = LightStrength
			OnMode = 0
		}
		LightLowComponents
		{
			Type = ToggledComponents
			Toggle = LightLowToggle
			Components
			{
				ColoredLightGraphics
				{
					Type = Graphics
					ChainedTo = Turret
					Rotation = 90d
					Location = [.5, 0]
					OperationalToggle = IsOperational
					GetColorFrom = ColorPicker
					OperationalRoofDoodad
					{
						Layer = "roof_doodads"
						Offset = [0, -4]
						DamageLevels
						[
							{
								File = "headlight_light_colored.png"
								Size = [8, 8]
							}
						]
					}
					OperationalRoofLighting
					{
						Layer = "roof_lights_fancy"
						DamageLevels
						[
							{
								File = "headlight_light_colored_fancy.png"
								Size = [8, 16]
								Z = 0.5 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
								VertexColor = [255*4.5, 255*4.5, 255*4.5]
							}
						]
					}
				}
			}
		}

		LightMedToggle
		{
			Type = ModeToggle
			Mode = LightStrength
			OnMode = 1
		}
		LightMedComponents
		{
			Type = ToggledComponents
			Toggle = LightMedToggle
			Components
			{
				ColoredLightGraphics
				{
					Type = Graphics
					ChainedTo = Turret
					Rotation = 90d
					Location = [.5, 0]
					OperationalToggle = IsOperational
					GetColorFrom = ColorPicker
					OperationalRoofDoodad
					{
						Layer = "roof_doodads"
						Offset = [0, -4*1.5]
						DamageLevels
						[
							{
								File = "headlight_light_colored.png"
								Size = [8*1.5, 8*1.5]
							}
						]
					}
					OperationalRoofLighting
					{
						Layer = "roof_lights_fancy"
						DamageLevels
						[
							{
								File = "headlight_light_colored_fancy.png"
								Size = [8*1.5, 16*1.5]
								Z = 0.5 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
								VertexColor = [255*4.5, 255*4.5, 255*4.5]
							}
						]
					}
				}
			}
		}

		LightHighToggle
		{
			Type = ModeToggle
			Mode = LightStrength
			OnMode = 2
		}
		LightHighComponents
		{
			Type = ToggledComponents
			Toggle = LightHighToggle
			Components
			{
				ColoredLightGraphics
				{
					Type = Graphics
					ChainedTo = Turret
					Rotation = 90d
					Location = [.5, 0]
					OperationalToggle = IsOperational
					GetColorFrom = ColorPicker
					OperationalRoofDoodad
					{
						Layer = "roof_doodads"
						Offset = [0, -4*2]
						DamageLevels
						[
							{
								File = "headlight_light_colored.png"
								Size = [8*2, 8*2]
							}
						]
					}
					OperationalRoofLighting
					{
						Layer = "roof_lights_fancy"
						DamageLevels
						[
							{
								File = "headlight_light_colored_fancy.png"
								Size = [8*2, 16*2]
								Z = 0.5 // Controls the "height" of the light for the purposes of normal mapping. Set to -1 (or any negative number) to disable normal lighting for this light.
								VertexColor = [255*4.5, 255*4.5, 255*4.5]
							}
						]
					}
				}
			}
		}

		Targeter
		{
			Type = UITargeter
			TargeterID = headlight_aim
			Weapons = [Turret]
		}
		Turret
		{
			Type = TurretWeapon
			Location = [.5, .5] // Relative to upper-left corner of unrotated part.
			Rotation = -90d // Relative to unrotated part.
			OperationalToggle = IsOperational
			FireInterval = Infinity
			TargetSearchesPerSecond = 0
			FiringArc = 360d
			RotateSpeed = 120d
			FireThresholdAngle = 1d
			AIFirepowerRating = 0
			SuppressWholeShipTargetOverlaysWhenTargetingShipRelativePoints = true
			SuppressShipWideExplicitTargetsWhenTargetingShipRelativePoints = true
			SuppressDirectControlWhenTargetingShipRelativePoints = true
			SuppressFirepowerEstimationWhenTargetingShipRelativePoints = true
			SaveShipRelativeTargets = true
			AllowDirectControl = false
			ShowTargetButtons = false

			AutoTargets []
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/SmallPartDestroyedDry
			Location = [.5, .5]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [1, 1]
		}
	}
}