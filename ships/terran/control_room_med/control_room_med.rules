Part : <../base_part_terran.rules>/Part
{
	NameKey = "Parts/ControlRoomMed"
	IconNameKey = "Parts/ControlRoomMedIcon"
	ID = cosmoteer.control_room_med // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	EditorGroup = "Flight"
	DescriptionKey = "Parts/ControlRoomMedDesc"
	Resources
	[
		[steel, 80]
		[coil2, 35]
		[processor, 5]
	]
	AIValueFactor = 5
	Size = [3, 3]
	SelectionPriority = 0
	SelectionTypeID = "control_room"
	MaxHealth = 9000
	ContiguityOriginPriority = 2
	TypeCategories = [command, uses_power, is_crewed]
	ReceivableBuffs : ^/0/ReceivableBuffs []
	ForceManhattanPathInPart = true
	BlockedTravelCells
	[
		[1, 0]
	]
	BlockedTravelCellDirections
	[
		{
			Key = [1, 1]
			Value = [Down]
		}
		{
			Key = [1, 2]
			Value = [Up]
		}
	]
	AllowedDoorLocations
	[
		[-1, 1]
		[-1, 2]
		[3, 1]
		[3, 2]
		[0, 3]
		[1, 3]
		[2, 3]
	]
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [64, 64]
	}
	Components : ^/0/Components
	{
		IsOperational
		{
			Type = MultiToggle
			Toggles = [PowerToggle, BatteryStorage, PartCrew]
			Mode = All
		}

		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 4000
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/ControlRoom_Supply
			ResupplyThreshold = 500
			OperationalToggle = PowerToggle
			AllowNonContiguousCrewSearch = true
		}

		PowerDrain
		{
			Type = ResourceConverter
			OperationalToggle = IsOperational
			FromStorage = BatteryStorage
			FromQuantity = 1000
			MinFromQuantityForConversion = 1
			Interval = 30 // Drains 1 power every 30 seconds.
		}

		CommandProvider
		{
			Type = CommandProvider
			OperationalToggle = IsOperational
			CommandPoints = 250 // Remember to update tooltip.
		}

		Sensor = &<../control_room_small/control_room_small.rules>/Part/Components/Sensor

		CrewLocation1
		{
			Type = CrewLocation
			Location = [1.5, 127/64]
		}
		CrewLocation2
		{
			Type = CrewLocation
			Location = [47/64, 49/64]
			Rotation = -30d
		}
		CrewLocation3
		{
			Type = CrewLocation
			Location = [145/64, 49/64]
			Rotation = 30d
		}
		PartCrew
		{
			Type = PartCrew
			Crew = 3
			DefaultPriority = &/PRIORITIES/ControlRoom_Crew
			PrerequisitesBeforeCrewing = [PowerToggle]
			HighPriorityPrerequisites = [BatteryStorage]
			CrewDestinations
			[
				&../../CrewLocation1/Location
				&../../CrewLocation2/Location
				&../../CrewLocation3/Location
			]
			CrewLocations
			[
				CrewLocation1
				CrewLocation2
				CrewLocation3
			]
		}

		Graphics
		{
			Type = Graphics
			Location = [1.5, 1.5]
			OperationalToggle = IsOperational
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [3, 3]
					}
					{
						File = "floor_33.png"
						Size = [3, 3]
					}
					{
						File = "floor_66.png"
						Size = [3, 3]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_low"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
							"doodads_on7.png"
							"doodads_on8.png"
							"doodads_on9.png"
							"doodads_on10.png"
							"doodads_on11.png"
							"doodads_on12.png"
						]
						Size = [3, 3]
						AnimationInterval = 0.125
					}
					{
						AnimationFiles
						[
							"doodads_on1_33.png"
							"doodads_on2_33.png"
							"doodads_on3_33.png"
							"doodads_on4_33.png"
							"doodads_on5_33.png"
							"doodads_on6_33.png"
							"doodads_on7_33.png"
							"doodads_on8_33.png"
							"doodads_on9_33.png"
							"doodads_on10_33.png"
							"doodads_on11_33.png"
							"doodads_on12_33.png"
						]
						Size = [3, 3]
						AnimationInterval = 0.125
					}
					{
						AnimationFiles
						[
							"doodads_on1_66.png"
							"doodads_on2_66.png"
							"doodads_on3_66.png"
							"doodads_on4_66.png"
							"doodads_on5_66.png"
							"doodads_on6_66.png"
							"doodads_on7_66.png"
							"doodads_on8_66.png"
							"doodads_on9_66.png"
							"doodads_on10_66.png"
							"doodads_on11_66.png"
							"doodads_on12_66.png"
						]
						Size = [3, 3]
						AnimationInterval = 0.125
					}
				]
			}
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						File = "lights.png"
						Size = [3, 3]
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [3, 3]
					}
					{
						File = "walls_33.png"
						Size = [3, 3]
					}
					{
						File = "walls_66.png"
						Size = [3, 3]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [3, 3]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [3, 3]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [3, 3]
					}
				]
			}
			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				DamageLevels
				[
					{
						File = "roof_glows.png"
						Size = [3, 3]
					}
					{
						File = "roof_glows_33.png"
						Size = [3, 3]
					}
					{
						File = "roof_glows_66.png"
						Size = [3, 3]
					}
				]
			}

			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				Offset = [54/64, 62/64]
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [6, 6]
						Z = 1.4 // Controls the "height" of the light for the purposes of normal mapping.
						VertexColor = [36*1.0,105*1.0, 255*1.0]
					}
				]
			}
		}

		Graphics2
		{
			Type = Graphics
			Location = [1.5, 158/64]
			OperationalToggle = IsOperational
			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				DamageLevels
				[
					{
						File = "radar.png"
						NormalsFile = "radar_normals.png"
						RotSpeed = 240d
						Size = [1, 1]
					}
				]
			}
			NonOperationalRoofDoodad
			{
				Layer = "roof_doodads"
				DamageLevels
				[
					{
						File = "radar.png"
						NormalsFile = "radar_normals.png"
						Size = [1, 1]
					}
				]
			}
			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				Offset = [-54/64, 0]
				DamageLevels
				[
					{
						File = "./Data/ships/common/light_blob.png"
						Size = [6, 6]
						Z = 1.4 // Controls the "height" of the light for the purposes of normal mapping.
						VertexColor = [36*1.0,105*1.0, 255*1.0]
					}
				]
			}
		}

		BatterySprites
		{
			Type = ResourceSprites
			Location = [1.5, 1]
			ResourceStorage = BatteryStorage
			Layer = "walls"
			ResourceLevels
			[
				{
					File = "batteries1.png"
					Size = [1, 1]
				}
				{
					File = "batteries2.png"
					Size = [1, 1]
				}
				{
					File = "batteries3.png"
					Size = [1, 1]
				}
				{
					File = "batteries4.png"
					Size = [1, 1]
				}
			]
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [1.5, 1.5]
			Toggle = IsOperational
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/BigPartDestroyed
			Location = [1.5, 1.5]
		}

		OperationSoundLoop
		{
			Type = ContinuousEffects
			Location = [1.5, 1.5]
			OperationalToggle = IsOperational
			MaxMediaEffectsZoom = 4
			MediaEffects
			[
				: /BASE_SOUNDS/AudioInterior
				{
					Sound = "../control_room_small/operating.wav"
					Volume = .15
					MaxConcurrentVolume = .3
					Speed = .75
					MaxConcurrent = 1
				}
			]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1.5, 1.5]
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
					HidesIndicators = [1,2]
				}

				// Out of power.
				{
					Toggle = BatteryStorage
					AtlasSprite
					{
						File = &/INDICATORS/NoPower
						Size = [1, 1]
					}
				}

				// No crew.
				{
					Toggle = PartCrew
					AtlasSprite
					{
						File = &/INDICATORS/NoCrew
						Size = [1, 1]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [3, 3]
		}
	}

	Stats
	{
		CrewRequired = &~/Part/Components/PartCrew/Crew
		PowerUsageContinuousMinutes = (&~/Part/Components/PowerDrain/FromQuantity) / (&~/Part/Components/PowerDrain/Interval) / 1000 * 60
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000
		SightRange = &~/Part/Components/Sensor/SightRadius
		RadarRange = &~/Part/Components/Sensor/RadarRadius

		RecPower = (&PowerUsageContinuousMinutes) / 60
		RecCrew = (&CrewRequired) + (&RecPower) * 4
	}
}