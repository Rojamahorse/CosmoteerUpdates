Part : <../base_part_terran.rules>/Part
{
	NameKey = "Parts/HyperdriveMed"
	IconNameKey = "Parts/HyperdriveMedIcon"
	ID = cosmoteer.hyperdrive_med // Part IDs must always be in the form of "author_name.part_name". If making your own mod, do *not* use "cosmoteer" as your author name, because it may conflict with future vanilla parts.
	EditorGroup = "Flight"
	DescriptionKey = "Parts/HyperdriveMedDesc"
	Resources
	[
		[steel, 76]
		[coil2, 52]
		[processor, 1]
	]
	Size = [3, 3]
	SelectionPriority = 0
	SelectionTypeID = "hyperdrives"
	MaxHealth = 9000
	AutoDoorMaxPathLength = 5
	TypeCategories = [ftl, uses_power] // 'ftl' is a magic category that allows the FTL overlay to efficiently find FTL drives.
	ReceivableBuffs : ^/0/ReceivableBuffs []
	IgnoreRotationForMirroredSelection = true
	BlockedTravelCells
	[
		[1, 1]
	]
	ForceManhattanPathInPart = true
	EditorIcon
	{
		Texture
		{
			File = "icon.png"
			SampleMode = Linear
		}
		Size = [64, 64]
	}
	Components : ^/0/Components
	{
		PowerToggle
		{
			Type = UIToggle
			ToggleID = "on_off"
			Default = 1
			RequiresCommand = false
		}

		BatteryStorage
		{
			Type = ResourceStorage
			ResourceType = battery
			MaxResources = 24000
			InitToMaxResources = 0
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/PowerDeliver
		}
		BatteryConsumer
		{
			Type = ResourceConsumer
			ResourceType = battery
			Storage = BatteryStorage
			DefaultPriority = &/PRIORITIES/Ftl_Supply
			OperationalToggle = FtlDrive
			AllowNonOperationalMinPriorityDelivery = false
			OverrideExclusiveCrewAssignment = true
		}

		ReloadProgressBar
		{
			Type = ProgressBar
			OperationalToggle = FtlDrive
			ShowProgressFor = BatteryStorage
		}

		HyperiumStorage
		{
			Type = ResourceStorage
			ResourceType = hyperium
			MaxResources = 40
			UITileRect = [1 + 7/64, 1 + 7/64, 1 - 14/64, 1 - 14/64]
			ReceiveResourceMediaEffects = &/COMMON_EFFECTS/ElementDeliver
			DropResourcesWhenDestroyed = true
		}
		HyperiumConsumer
		{
			Type = ResourceConsumer
			ResourceType = hyperium
			Storage = HyperiumStorage
			DefaultPriority = &/PRIORITIES/Utility_Supply
			OperationalToggle = PowerToggle
			ConsumptionToggleButtonOffset = [0, -.4]
		}

		FtlDrive
		{
			Type = FtlDrive
			OperationalToggle = PowerToggle
			PowerStorage = BatteryStorage
			FuelStorage = HyperiumStorage
			SpinDownDuration = 5
			JumpEfficiency = 50%
			JumpEfficiencyDistanceRange = [10, 60]

			JumpOutMediaEffects
			[
				&<../../common/particles/ftl_lightning.rules>
			]
			JumpOutGateMediaEffects
			[
				&<../../common/particles/ftl_gate_lightning_out.rules>

				: /BASE_SOUNDS/AudioExteriorZoomless
				{
					Sound = "../../common/ftl_zap_out.wav"
					Volume = 1
					MaxConcurrentVolume = 1
					Speed = 1
					MaxConcurrent = 3
				}
			]
			JumpInMediaEffects
			[
				: <../../common/particles/ftl_lightning.rules>
				{
					Delay = (&<./Data/ships/base_ship.rules>/FtlEffects/TotalDuration) - (&<./Data/ships/base_ship.rules>/FtlEffects/CropTime/1) - .4
				}
			]
			JumpInGateMediaEffects
			[
				: <../../common/particles/ftl_gate_lightning_in.rules>
				{
					Delay = (&<./Data/ships/base_ship.rules>/FtlEffects/TotalDuration) - (&<./Data/ships/base_ship.rules>/FtlEffects/CropTime/1) - .4
				}

				: /BASE_SOUNDS/AudioExteriorZoomless
				{
					Delay = (&<./Data/ships/base_ship.rules>/FtlEffects/TotalDuration) - (&<./Data/ships/base_ship.rules>/FtlEffects/CropTime/1) - .8
					Sound = "../../common/ftl_zap_in.wav"
					Volume = 1
					MaxConcurrentVolume = 1
					Speed = 1
					MaxConcurrent = 3
				}
			]
		}

		BatteryStorageCharging
		{
			Type = MultiResourceStorage
			ResourceType = battery
			ResourceStorages = [BatteryStorage]
			ToggleOnResources = 1
			ToggleOffResources = 0
		}
		BatteryStorageFull
		{
			Type = MultiResourceStorage
			ResourceType = battery
			ResourceStorages = [BatteryStorage]
			ToggleOnResources = &../BatteryStorage/MaxResources
			ToggleOffResource = (&../BatteryStorage/MaxResources) - 1
		}

		Graphics
		{
			Type = Graphics
			Location = [1.5, 1.5]
			OperationalToggle = PowerToggle
			AnimationSpeedFactor = FtlDrive
			Floor
			{
				Layer = "floors"
				DamageLevels
				[
					{
						File = "floor.png"
						Size = [3, 3]
					}
					{
						File = "floor_33.png"
						Size = [3, 3]
					}
					{
						File = "floor_66.png"
						Size = [3, 3]
					}
				]
			}
			OperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"doodads_on1.png"
							"doodads_on2.png"
							"doodads_on3.png"
							"doodads_on4.png"
							"doodads_on5.png"
							"doodads_on6.png"
							"doodads_on7.png"
							"doodads_on8.png"
						]
						Size = [3, 3]
						AnimationInterval = 0.015
					}
					{
						AnimationFiles
						[
							"doodads_on1_33.png"
							"doodads_on2_33.png"
							"doodads_on3_33.png"
							"doodads_on4_33.png"
							"doodads_on5_33.png"
							"doodads_on6_33.png"
							"doodads_on7_33.png"
							"doodads_on8_33.png"
						]
						Size = [3, 3]
						AnimationInterval = 0.015
					}
					{
						AnimationFiles
						[
							"doodads_on1_66.png"
							"doodads_on2_66.png"
							"doodads_on3_66.png"
							"doodads_on4_66.png"
							"doodads_on5_66.png"
							"doodads_on6_66.png"
							"doodads_on7_66.png"
							"doodads_on8_66.png"
						]
						Size = [3, 3]
						AnimationInterval = 0.015
					}
				]
			}
			NonOperationalDoodad
			{
				Layer = "doodads_high"
				DamageLevels
				[
					{
						File = "doodads_off.png"
						Size = [3, 3]
					}
					{
						File = "doodads_off_33.png"
						Size = [3, 3]
					}
					{
						File = "doodads_off_66.png"
						Size = [3, 3]
					}
				]
			}
			OperationalLighting //repeated three times to synchronize with the Doodad when it gets damaged
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"lights1.png"
							"lights2.png"
							"lights3.png"
							"lights4.png"
							"lights5.png"
							"lights6.png"
							"lights7.png"
							"lights8.png"
						]
						Size = [3, 3]
						AnimationInterval = 0.015
					}
					{
						AnimationFiles
						[
							"lights1.png"
							"lights2.png"
							"lights3.png"
							"lights4.png"
							"lights5.png"
							"lights6.png"
							"lights7.png"
							"lights8.png"
						]
						Size = [3, 3]
						AnimationInterval = 0.015
					}
					{
						AnimationFiles
						[
							"lights1.png"
							"lights2.png"
							"lights3.png"
							"lights4.png"
							"lights5.png"
							"lights6.png"
							"lights7.png"
							"lights8.png"
						]
						Size = [3, 3]
						AnimationInterval = 0.015
					}
				]
			}
			Walls
			{
				Layer = "walls"
				DamageLevels
				[
					{
						File = "walls.png"
						Size = [3, 3]
					}
					{
						File = "walls_33.png"
						Size = [3, 3]
					}
					{
						File = "walls_66.png"
						Size = [3, 3]
					}
				]
			}
			Roof
			{
				Layer = "roofs"
				DamageLevels
				[
					{
						File = "roof.png"
						NormalsFile = "roof_normals.png"
						Size = [3, 3]
					}
					{
						File = "roof_33.png"
						NormalsFile = "roof_normals_33.png"
						Size = [3, 3]
					}
					{
						File = "roof_66.png"
						NormalsFile = "roof_normals_66.png"
						Size = [3, 3]
					}
				]
			}
			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				DamageLevels
				[
					{
						File = "roof_glows.png"
						Size = [3, 3]
					}
					{
						File = "roof_glows_33.png"
						Size = [3, 3]
					}
					{
						File = "roof_glows_66.png"
						Size = [3, 3]
					}
				]
			}
		}

		FTLCharging_RoofGraphics
		{
			Type = Graphics
			Location = [1.5, 1.5]
			OperationalToggle = BatteryStorageCharging
			AnimationSpeedFactor = FtlDrive
			OperationalRoofDoodad
			{
				Layer = "roof_doodads"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"roof_doodads_on1.png"
							"roof_doodads_on2.png"
							"roof_doodads_on3.png"
							"roof_doodads_on4.png"
							"roof_doodads_on5.png"
							"roof_doodads_on6.png"
							"roof_doodads_on7.png"
							"roof_doodads_on8.png"
						]
						Size = [3, 3]
						AnimationInterval = 0.03
					}
				]
			}
			OperationalRoofLighting
			{
				Layer = "roof_lights_fancy"
				DamageLevels
				[
					{
						File = "light_blob.png"
						Size = [6, 6]
						Z = 1.5 // Controls the "height" of the light for the purposes of normal mapping.
						VertexColor = [0*2.0,255*2.0, 255*2.0]
					}
				]
			}
		}

		FTLFullCharge_InternalGraphics
		{
			Type = Graphics
			Location = [1.5, 1.5]
			OperationalToggle = BatteryStorageFull
			AnimationSpeedFactor = FtlDrive
			OperationalLighting
			{
				Layer = "lights_add"
				DamageLevels
				[
					{
						AnimationFiles
						[
							"lights_full00-04-08-12.png"
							"lights_full01.png"
							"lights_full02.png"
							"lights_full03.png"
							"lights_full00-04-08-12.png"
							"lights_full05.png"
							"lights_full06.png"
							"lights_full07.png"
							"lights_full00-04-08-12.png"
							"lights_full09.png"
							"lights_full10.png"
							"lights_full11.png"
							"lights_full00-04-08-12.png"
							"lights_full13.png"
							"lights_full14.png"
							"lights_full15.png"
						]
						Size = [3, 3]
						AnimationInterval = 0.15
					}
					{
						AnimationFiles
						[
							"lights_full00_33.png"
							"lights_full01_33.png"
							"lights_full02_33.png"
							"lights_full03_33.png"
							"lights_full04_33.png"
							"lights_full05_33.png"
							"lights_full06.png"
							"lights_full07.png"
							"lights_full00-04-08-12.png"
							"lights_full09.png"
							"lights_full10.png"
							"lights_full11.png"
							"lights_full00-04-08-12.png"
							"lights_full13.png"
							"lights_full14.png"
							"lights_full15.png"
						]
						Size = [3, 3]
						AnimationInterval = 0.15
					}
					{
						AnimationFiles
						[
							"lights_full00_33.png"
							"lights_full01_33.png"
							"lights_full02_33.png"
							"lights_full03_33.png"
							"lights_full04_33.png"
							"lights_full05_33.png"
							"lights_full06.png"
							"lights_full07.png"
							"lights_full08_66.png"
							"lights_full09_66.png"
							"lights_full10_66.png"
							"lights_full11_66.png"
							"lights_full12_66.png"
							"lights_full13_66.png"
							"lights_full14.png"
							"lights_full15.png"
						]
						Size = [3, 3]
						AnimationInterval = 0.15
					}
				]
			}
		}

		FtlSpin
		{
			Type = ContinuousEffects
			Location = [1.5, 1.5]
			FactorMediaEffectsIntensityWith = FtlDrive
			MinMediaEffectsIntensity = 1%
			OperationalToggle = PowerToggle
			MediaEffects
			[
				: /BASE_SOUNDS/AudioExterior
				{
					Sound = "spin.wav"
					Volume = .5
					Speed = 2.5
					MaxConcurrent = 0
					VolumeOverIntensity = 1
					SpeedOverIntensity = [0, 1]
				}
			]
		}

		BatterySprites
		{
			Type = ResourceSprites
			Location = [1.5, 1.5]
			ResourceStorage = BatteryStorage
			Layer = "doodads_low"
			ResourceLevels
			[
				{
					File = "power1.png"
					Size = [1, 1]
					Offset = [-16/64, -41/64]
				}
				{
					File = "power2.png"
					Size = [1, 1]
					Offset = [-16/64, -41/64]
				}
				{
					File = "power3.png"
					Size = [1, 1]
					Offset = [-16/64, -41/64]
				}
				{
					File = "power4.png"
					Size = [2, 1]
					Offset = [16/64, -41/64]
				}
				{
					File = "power5.png"
					Size = [2, 1]
					Offset = [16/64, -41/64]
				}
				{
					File = "power6.png"
					Size = [2, 1]
					Offset = [16/64, -41/64]
				}
				{
					File = "power7.png"
					Size = [2, 1]
					Offset = [16/64, -41/64]
				}
				{
					File = "power8.png"
					Size = [2, 1]
					Offset = [16/64, -41/64]
				}
				{
					File = "power9.png"
					Size = [2, 2]
					Offset = [16/64, -9/64]
				}
				{
					File = "power10.png"
					Size = [2, 2]
					Offset = [16/64, -9/64]
				}
				{
					File = "power11.png"
					Size = [2, 2]
					Offset = [16/64, -9/64]
				}
				{
					File = "power12.png"
					Size = [2, 2]
					Offset = [16/64, -9/64]
				}
				{
					File = "power13.png"
					Size = [2, 3]
					Offset = [16/64, 0]
				}
				{
					File = "power14.png"
					Size = [2, 3]
					Offset = [16/64, 0]
				}
				{
					File = "power15.png"
					Size = [2, 3]
					Offset = [16/64, 0]
				}
				{
					File = "power16.png"
					Size = [2, 3]
					Offset = [16/64, 0]
				}
				{
					File = "power17.png"
					Size = [2, 3]
					Offset = [16/64, 0]
				}
				{
					File = "power18.png"
					Size = [2, 3]
					Offset = [16/64, 0]
				}
				{
					File = "power19.png"
					Size = [3, 3]
				}
				{
					File = "power20.png"
					Size = [3, 3]
				}
				{
					File = "power21.png"
					Size = [3, 3]
				}
				{
					File = "power22.png"
					Size = [3, 3]
				}
				{
					File = "power23.png"
					Size = [3, 3]
				}
				{
					File = "power24.png"
					Size = [3, 3]
				}
			]
		}

		HyperiumCrystalsSprites1
		{
			Type = ResourceSprites
			Location = [116/64, 64/64]
			ResourceStorage = HyperiumStorage
			Layer = "doodads_low"
			RangeLow = 0
			RangeHigh = 10
			ResourceLevels
			[
				{
					AnimationFiles
					[
						"hyperium_crystals1-1.png"
						"hyperium_crystals1-2.png"
					]
					AnimationInterval = 0.15
					Size = [1, 1]
				}
				{
					AnimationFiles
					[
						"hyperium_crystals2-1.png"
						"hyperium_crystals2-2.png"
					]
					AnimationInterval = 0.15
					Size = [1, 1]
				}
				{
					AnimationFiles
					[
						"hyperium_crystals3-1.png"
						"hyperium_crystals3-2.png"
					]
					AnimationInterval = 0.15
					Size = [1, 1]
				}
				{
					AnimationFiles
					[
						"hyperium_crystals4-1.png"
						"hyperium_crystals4-2.png"
					]
					AnimationInterval = 0.15
					Size = [1, 1]
				}
				{
					AnimationFiles
					[
						"hyperium_crystals5-1.png"
						"hyperium_crystals5-2.png"
					]
					AnimationInterval = 0.15
					Size = [1, 1]
				}
				{
					AnimationFiles
					[
						"hyperium_crystals6-1.png"
						"hyperium_crystals6-2.png"
					]
					AnimationInterval = 0.15
					Size = [1, 1]
				}
				{
					AnimationFiles
					[
						"hyperium_crystals7-1.png"
						"hyperium_crystals7-2.png"
					]
					AnimationInterval = 0.15
					Size = [1, 1]
				}
				{
					AnimationFiles
					[
						"hyperium_crystals8-1.png"
						"hyperium_crystals8-2.png"
					]
					AnimationInterval = 0.15
					Size = [1, 1]
				}
				{
					AnimationFiles
					[
						"hyperium_crystals9-1.png"
						"hyperium_crystals9-2.png"
					]
					AnimationInterval = 0.15
					Size = [2, 1]
					Offset = [32/64, 0]
				}
				{
					AnimationFiles
					[
						"hyperium_crystals10-1.png"
						"hyperium_crystals10-2.png"
					]
					AnimationInterval = 0.15
					Size = [2, 2]
					Offset = [32/64, 32/64]
				}
			]
		}
		HyperiumCrystalsSprites2 : HyperiumCrystalsSprites1
		{
			Location = [128/64, 116/64]
			Rotation = 90d
			RangeLow = 10
			RangeHigh = 20
		}
		HyperiumCrystalsSprites3 : HyperiumCrystalsSprites1
		{
			Location = [76/64, 128/64]
			Rotation = 180d
			RangeLow = 20
			RangeHigh = 30
		}
		HyperiumCrystalsSprites4 : HyperiumCrystalsSprites1
		{
			Location = [1, 76/64]
			Rotation = 270d
			RangeLow = 30
			RangeHigh = 40
		}

		OperationEffects
		{
			Type = ToggleEffects
			Location = [1.5, 1.5]
			Toggle = PowerToggle
			ToggledOnMediaEffects = &/COMMON_EFFECTS/PowerOn
			ToggledOffMediaEffects = &/COMMON_EFFECTS/PowerOff
		}

		DestroyedEffects
		{
			Type = DeathEffects
			MediaEffects = &/COMMON_EFFECTS/BigPartDestroyed
			Location = [1.5, 1.5]
		}

		Indicators
		{
			Type = IndicatorSprites
			Location = [1.5, 1.5]
			Indicators
			[
				// Turned off.
				{
					Toggle = PowerToggle
					AtlasSprite
					{
						File = &/INDICATORS/PowerOff
						Size = [1, 1]
					}
				}
			]
		}

		Blueprints
		{
			Type = BlueprintSprite
			File = "blueprints.png"
			Size = [3, 3]
		}
	}

	Stats
	{
		FtlMaxEfficiencyRange = &~/Part/Components/FtlDrive/JumpEfficiencyDistanceRange/0
		FtlMinEfficiencyRange = &~/Part/Components/FtlDrive/JumpEfficiencyDistanceRange/1
		HyperiumCapacity = &~/Part/Components/HyperiumStorage/MaxResources
		PowerCapacity = (&~/Part/Components/BatteryStorage/MaxResources) / 1000
	}
}